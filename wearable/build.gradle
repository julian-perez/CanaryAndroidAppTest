import org.ajoberstar.grgit.Grgit

apply plugin: 'com.android.application'
apply plugin: 'jacoco-android'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'org.ajoberstar:grgit:1.5.0'
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'io.fabric.sdk.android:fabric:1.3.5'
}
android {

    project.ext.set("versionCodeManualOverride", null)
    publishNonDefault true
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 27
        versionName '2.1.0'
        versionCode getCustomVersionCode()
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        //  Android Studio doesn't pass environment variables into Gradle so we can check if they are
        //  present and use them only if they are.
        if (System.getenv("ANDROID_KEYSTORE") != null) {
            stage {
                storeFile file(System.getenv("ANDROID_KEYSTORE"))
                storePassword System.getenv("ANDROID_KEYPASS")
                keyAlias System.getenv("ANDROID_KEYALIAS")
                keyPassword System.getenv("ANDROID_KEYPASS")
            }
        } else {
            stage {}
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            testCoverageEnabled = true
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
        }

        signed {
            signingConfig signingConfigs.stage
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
        }
    }

    flavorDimensions 'version'

    productFlavors {
        prod_qa {
            applicationId 'is.yranac.canary.production'
            dimension 'version'
        }
        prod {
            applicationId 'is.yranac.canary'
            dimension 'version'
        }
        stage {
            applicationId 'is.yranac.canary.staging'
            dimension 'version'
        }
        dev {
            applicationId 'is.yranac.canary.dev_two'
            dimension 'version'
        }
        beta_plus {
            applicationId 'is.yranac.canary.beta_plus'
            dimension 'version'
        }
        demo {
            applicationId 'is.yranac.canary.demo'
            dimension 'version'
        }
        beta {
            applicationId 'is.yranac.canary.production_beta'
            dimension 'version'
        }
        feature {
            applicationId 'is.yranac.canary.serinus'
            dimension 'version'
        }
    }

    dependencies {
        compile 'com.google.android.support:wearable:2.1.0'
        compile 'com.google.code.gson:gson:2.7'
        compile 'com.google.android.gms:play-services-wearable:11.8.0'
        compile 'de.halfbit:tinybus:3.0.2'
        compile('com.crashlytics.sdk.android:crashlytics:2.5.1@aar') {
            transitive = true;
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

}

def getCustomVersionCode() {

    if (project.versionCodeManualOverride != null) {
        return project.versionCodeManualOverride
    }

    // current dir is <your proj>/app, so it's likely that all your git repo files are in the dir
    // above.
    ext.repo = Grgit.open(project.file('..'))

    // should result in the same value as running
    // git rev-list <your current branch name> | wc -l
    def numOfCommits = ext.repo.log().size()
    return numOfCommits
}


jacocoAndroidUnitTestReport {
    csv.enabled true
    html.enabled true
    xml.enabled true
}
